string 클래스를 대체하는 클래스 정의 위해 어떠한 것이 요구되는가?

1. 문자열을 인자로 전달받는 생성자의 정의

2. 생성자, 소멸자, 복사 생성자 그리고 대입 연산자 정의
  - 문자열의 저장을 위한 메모리 공간을 생성자 내에서 동적 할당해야 한다.
  - 그리고 이로 인해서 소멸자를 정의해야 하며, 깊은 복사를 하는 복사 생성자와 대입 연산자까지 함께 정의하고자 한다.

3. 결합된 문자열로 초기화된 객체를 반환하는 + 연산자의 오버로딩
  string str3=str1+str2; // STDString.cpp의 8행.
  - 문자열의 주소 값(str1과 str2가 지니고 있는 문자열을 합한 문자열의 주소 값)
  - string 객체(str1과 str2가 지니고 있는 문자열을 저장하고 있는 객체)

4. 문자열을 덧붙이는 += 연산자의 오버로딩
  - str1+=str2; // 연산의 결과로 str2이 지니는 문자열이 str1이 지닌 문자열 뒤에 덧붙여진 것.

5. 내용비교를 진행하는 == 연산자의 오버로딩
  - ==연산자가 객체에 저장된 문자열의 내용을 비교하도록 오버로딩 해야 함.

6. 콘솔입출력이 가능하도록 <<, >> 연산자의 오버로딩
  - << 연산자를 이용한 출력과 >> 연산자를 이용한 입력이 가능하도록 오버로딩을 해야 한다.